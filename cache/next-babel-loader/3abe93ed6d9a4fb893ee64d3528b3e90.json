{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../../middleware/auth';\n\nconst models = require('../../../db/models/index');\n\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    slug\n  } = req.query;\n  const post = await models.posts.findOne({\n    where: {\n      slug: slug\n    },\n    include: [{\n      model: models.users,\n      as: 'user'\n    }],\n    order: [// Will escape title and validate DESC against a list of valid direction parameters\n    ['createdAt', 'ASC']]\n  });\n  res.statusCode = 200;\n  return res.json({\n    status: 'success',\n    data: post\n  });\n}) // Post method\n.post(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    title,\n    content\n  } = body;\n  const {\n    user\n  } = req;\n  const newPost = await models.posts.create({\n    title,\n    content,\n    status: 1,\n    userId: user.id\n  });\n  return res.status(200).json({\n    status: 'success',\n    message: 'done',\n    data: newPost\n  });\n}) // Put method\n.put(async (req, res) => {\n  res.end('method - put');\n}) // Patch method\n.patch(async (req, res) => {\n  throw new Error('Throws me around! Error can be caught and handled.');\n});\nexport default handler;","map":null,"metadata":{},"sourceType":"module"}