{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../db/models/index');\n\nimport middleware from '../../../middleware/auth';\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    query: {\n      nextPage\n    },\n    method,\n    body\n  } = req;\n  const users = await models.users.findAndCountAll({\n    include: [{\n      model: models.posts,\n      as: 'posts'\n    }, {\n      model: models.jobs,\n      as: 'jobs'\n    }],\n    order: [// Will escape title and validate DESC against a list of valid direction parameters\n    ['id', 'DESC']],\n    offset: nextPage ? +nextPage : 0,\n    limit: 5\n  });\n  res.statusCode = 200;\n  res.json({\n    status: 'success',\n    data: users.rows,\n    total: users.count,\n    nextPage: +nextPage + 5\n  });\n}) // Post method\n.post(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const {\n    username,\n    email,\n    password\n  } = body;\n  const userId = slug;\n  const newUser = await models.users.create({\n    username,\n    email,\n    password,\n    status: 1\n  });\n  return res.status(200).json({\n    status: 'success',\n    message: 'done',\n    data: newUser\n  });\n}) // Put method\n.put(async (req, res) => {\n  res.end('method - put');\n}) // Patch method\n.patch(async (req, res) => {\n  throw new Error('Throws me around! Error can be caught and handled.');\n});\nexport default handler;","map":null,"metadata":{},"sourceType":"module"}