{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport Router, { useRouter } from 'next/router';\n/* utils */\n\nimport { absoluteUrl } from '../middleware/utils';\n/* components */\n\nimport Layout from '../components/layout/Layout';\nimport UserNav from '../components/navigation/User';\n\nfunction User(props) {\n  const router = useRouter();\n  const {\n    origin,\n    user,\n    users\n  } = props;\n\n  function renderUsers(users) {\n    return users.data.map((user, i) => {\n      return __jsx(Link, {\n        key: i,\n        href: \"/user/[slug]\",\n        as: `/user/${user.id}`\n      }, __jsx(\"a\", {\n        className: \"card\"\n      }, __jsx(\"h3\", {\n        className: \"headline\"\n      }, user.username), __jsx(\"p\", null, user.email), __jsx(\"small\", null, \"Posts: \", user.posts.length), ' ', __jsx(\"small\", null, \"Jobs: \", user.jobs.length)));\n    });\n  }\n\n  async function loadMoreClick(e) {\n    await Router.push({\n      pathname: '/user',\n      query: {\n        nextPage: users.nextPage ? users.nextPage : 5\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Next.js with Sequelize | User Page\",\n    url: `${origin}${router.asPath}`,\n    origin: origin\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"main\", null, __jsx(\"h1\", {\n    className: \"title\"\n  }, \"Sequelize & \", __jsx(\"a\", {\n    href: \"https://nextjs.org\"\n  }, \"Next.js!\")), __jsx(\"p\", {\n    className: \"description\"\n  }, __jsx(\"img\", {\n    src: \"/sequelize.svg\",\n    alt: \"Sequelize\",\n    height: \"120\",\n    style: {\n      marginRight: '1rem'\n    }\n  }), __jsx(\"img\", {\n    src: \"/nextjs.svg\",\n    alt: \"Next.js\",\n    width: \"160\"\n  })), __jsx(UserNav, {\n    props: {\n      user: user\n    }\n  }), __jsx(\"h2\", null, __jsx(Link, {\n    href: {\n      pathname: '/'\n    }\n  }, __jsx(\"a\", null, \"\\u2190 \")), \"Recent Users\"), __jsx(\"div\", {\n    className: \"grid\"\n  }, users.status === 'success' ? users.data.length && renderUsers(users) : __jsx(\"h3\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '0rem',\n      marginBottom: '1rem',\n      display: 'inline-block',\n      width: '100%'\n    }\n  }, users.error)))));\n}\n/* getServerSideProps */\n\n\nexport async function getServerSideProps(context) {\n  const {\n    query,\n    req\n  } = context;\n  const {\n    nextPage\n  } = query;\n  const {\n    origin\n  } = absoluteUrl(req);\n  const referer = req.headers.referer || '';\n  const nextPageUrl = !isNaN(nextPage) ? `?nextPage=${nextPage}` : '';\n  const baseApiUrl = `${origin}/api`;\n  const usersApi = await fetch(`${baseApiUrl}/user${nextPageUrl}`);\n  const users = await usersApi.json();\n  return {\n    props: {\n      origin,\n      referer,\n      users\n    }\n  };\n}\nexport default User;","map":null,"metadata":{},"sourceType":"module"}