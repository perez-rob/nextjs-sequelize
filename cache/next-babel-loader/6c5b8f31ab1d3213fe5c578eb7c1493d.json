{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Link from 'next/link';\nimport Router, { useRouter } from 'next/router';\n/* utils */\n\nimport { absoluteUrl, getAppCookies } from '../middleware/utils';\n/* components */\n\nimport Layout from '../components/layout/Layout';\nimport UserNav from '../components/navigation/User';\n\nfunction Job(props) {\n  const router = useRouter();\n  const {\n    origin,\n    user,\n    jobs\n  } = props;\n\n  function renderJobs() {\n    return jobs.data.map((job, j) => {\n      return __jsx(Link, {\n        key: j,\n        href: \"/job/[slug]\",\n        as: `/job/${job.slug}`\n      }, __jsx(\"a\", {\n        className: \"card\"\n      }, __jsx(\"h3\", {\n        className: \"headline\"\n      }, job.title), __jsx(\"div\", null, __jsx(\"small\", null, \"Posted: \", job.createdAt), __jsx(\"small\", {\n        style: {\n          float: 'right'\n        }\n      }, \"Job by: \", job.user.firstName || '', \" \", job.user.lastName || '')), __jsx(\"small\", {\n        style: {\n          display: 'block'\n        }\n      }, \"Email: \", job.emailTo), __jsx(\"small\", {\n        style: {\n          display: 'block'\n        }\n      }, \"Report to: \", job.reportManager), __jsx(\"small\", {\n        style: {\n          display: 'block'\n        }\n      }, \"Limit :\", job.dateLimit)));\n    });\n  }\n\n  async function loadMoreClick(e) {\n    await Router.push({\n      pathname: '/job',\n      query: {\n        nextPage: jobs.nextPage ? jobs.nextPage : 5\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Next.js with Sequelize | Job Page\",\n    url: `${origin}${router.asPath}`,\n    origin: origin\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"main\", null, __jsx(\"h1\", {\n    className: \"title\"\n  }, \"Sequelize & \", __jsx(\"a\", {\n    href: \"https://nextjs.org\"\n  }, \"Next.js!\")), __jsx(\"p\", {\n    className: \"description\"\n  }, __jsx(\"img\", {\n    src: \"/sequelize.svg\",\n    alt: \"Sequelize\",\n    height: \"120\",\n    style: {\n      marginRight: '1rem'\n    }\n  }), __jsx(\"img\", {\n    src: \"/nextjs.svg\",\n    alt: \"Next.js\",\n    width: \"160\"\n  })), __jsx(UserNav, {\n    props: {\n      user: user\n    }\n  }), __jsx(\"h2\", null, __jsx(Link, {\n    href: {\n      pathname: '/'\n    }\n  }, __jsx(\"a\", null, \"\\u2190 \")), \"Latest Jobs\"), __jsx(\"div\", {\n    className: \"grid\"\n  }, __jsx(\"small\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '0rem',\n      marginBottom: '1rem'\n    }\n  }, __jsx(Link, {\n    href: \"/job/add\"\n  }, __jsx(\"a\", null, \"+ Add Job\"))), jobs.status === 'success' ? jobs.data.length && renderJobs() : __jsx(\"h3\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '0rem',\n      marginBottom: '1rem',\n      display: 'inline-block',\n      width: '100%'\n    }\n  }, jobs.error), jobs.status === 'success' && __jsx(React.Fragment, null, jobs.nextPage < jobs.total && jobs.data.length !== jobs.total ? __jsx(\"button\", {\n    onClick: loadMoreClick,\n    className: \"jsx-2614092801\"\n  }, \"Next\") : __jsx(\"span\", {\n    className: \"jsx-2614092801\" + \" \" + \"span-info\"\n  }, \"no page left\"), __jsx(_JSXStyle, {\n    id: \"2614092801\"\n  }, [\"button.jsx-2614092801,.span-info.jsx-2614092801{margin:1rem auto;padding:0.5rem 1rem;border:1px solid #cecece;background-color:#fffcfc;color:#7b7b7b;outline:none;}\"]))))));\n}\n/* getServerSideProps */\n\n\nexport async function getServerSideProps(context) {\n  const {\n    query,\n    req\n  } = context;\n  const {\n    nextPage\n  } = query;\n  const {\n    origin\n  } = absoluteUrl(req);\n  const token = getAppCookies(req).token || '';\n  const referer = req.headers.referer || '';\n  const nextPageUrl = !isNaN(nextPage) ? `?nextPage=${nextPage}` : '';\n  const baseApiUrl = `${origin}/api`;\n  const jobsApi = await fetch(`${baseApiUrl}/job${nextPageUrl}`, {\n    headers: {\n      authorization: token || ''\n    }\n  });\n  const jobs = await jobsApi.json();\n  return {\n    props: {\n      origin,\n      referer,\n      token,\n      jobs\n    }\n  };\n}\nexport default Job;","map":null,"metadata":{},"sourceType":"module"}