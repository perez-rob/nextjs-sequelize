{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst Sequelize = require('sequelize');\n\nconst basename = path.basename(__filename);\nconst env = \"development\" || 'development';\n\nconst config = require(__dirname + '/../config/config.js')[env];\n\nconst db = {};\n/* Custom handler for reading current working directory */\n\nconst models = process.cwd() + '/db/models/' || __dirname;\n\nlet sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config, {\n    pool: {\n      max: 5,\n      min: 0,\n      acuire: 30000,\n      idle: 10000\n    }\n  });\n}\n/* fs.readdirSync(__dirname) */\n\n\nfs.readdirSync(models).filter(file => {\n  return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js';\n}).forEach(file => {\n  /* const model = sequelize[\"import\"](path.join(__dirname, file)); */\n  const model = sequelize['import'](path.join(models, file));\n  db[model.name] = model;\n});\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;","map":{"version":3,"sources":["C:/Users/bobwp/Desktop/Coding-Bootcamp/Test-Projects/nextjs-sequelize/db/models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","config","__dirname","db","models","process","cwd","sequelize","use_env_variable","database","username","password","pool","max","min","acuire","idle","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAjB;AACA,MAAMC,GAAG,GAAG,iBAAwB,aAApC;;AACA,MAAMC,MAAM,GAAGN,OAAO,CAACO,SAAS,GAAG,sBAAb,CAAP,CAA4CF,GAA5C,CAAf;;AACA,MAAMG,EAAE,GAAG,EAAX;AAEA;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,KAAgB,aAAhB,IAAiCJ,SAAhD;;AAEA,IAAIK,SAAJ;;AACA,IAAIN,MAAM,CAACO,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIV,SAAJ,CAAcQ,OAAO,CAACL,GAAR,CAAYC,MAAM,CAACO,gBAAnB,CAAd,EAAoDP,MAApD,CAAZ;AACD,CAFD,MAEO;AACLM,EAAAA,SAAS,GAAG,IAAIV,SAAJ,CACVI,MAAM,CAACQ,QADG,EAEVR,MAAM,CAACS,QAFG,EAGVT,MAAM,CAACU,QAHG,EAIVV,MAJU,EAKV;AACEW,IAAAA,IAAI,EAAE;AACJC,MAAAA,GAAG,EAAE,CADD;AAEJC,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,MAAM,EAAE,KAHJ;AAIJC,MAAAA,IAAI,EAAE;AAJF;AADR,GALU,CAAZ;AAcD;AACD;;;AACAtB,EAAE,CAACuB,WAAH,CAAeb,MAAf,EACGc,MADH,CACUC,IAAI,IAAI;AACd,SACEA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA2BD,IAAI,KAAKrB,QAApC,IAAgDqB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KADrE;AAGD,CALH,EAMGC,OANH,CAMWH,IAAI,IAAI;AACf;AACA,QAAMI,KAAK,GAAGhB,SAAS,CAAC,QAAD,CAAT,CAAoBX,IAAI,CAAC4B,IAAL,CAAUpB,MAAV,EAAkBe,IAAlB,CAApB,CAAd;AACAhB,EAAAA,EAAE,CAACoB,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CAVH;AAYAG,MAAM,CAACC,IAAP,CAAYxB,EAAZ,EAAgBmB,OAAhB,CAAwBM,SAAS,IAAI;AACnC,MAAIzB,EAAE,CAACyB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3B1B,IAAAA,EAAE,CAACyB,SAAD,CAAF,CAAcC,SAAd,CAAwB1B,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACI,SAAH,GAAeA,SAAf;AACAJ,EAAE,CAACN,SAAH,GAAeA,SAAf;AAEAiC,MAAM,CAACC,OAAP,GAAiB5B,EAAjB","sourcesContent":["'use strict';\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst Sequelize = require('sequelize');\r\nconst basename = path.basename(__filename);\r\nconst env = process.env.NODE_ENV || 'development';\r\nconst config = require(__dirname + '/../config/config.js')[env];\r\nconst db = {};\r\n\r\n/* Custom handler for reading current working directory */\r\nconst models = process.cwd() + '/db/models/' || __dirname;\r\n\r\nlet sequelize;\r\nif (config.use_env_variable) {\r\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\r\n} else {\r\n  sequelize = new Sequelize(\r\n    config.database,\r\n    config.username,\r\n    config.password,\r\n    config,\r\n    {\r\n      pool: {\r\n        max: 5,\r\n        min: 0,\r\n        acuire: 30000,\r\n        idle: 10000,\r\n      },\r\n    },\r\n  );\r\n}\r\n/* fs.readdirSync(__dirname) */\r\nfs.readdirSync(models)\r\n  .filter(file => {\r\n    return (\r\n      file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js'\r\n    );\r\n  })\r\n  .forEach(file => {\r\n    /* const model = sequelize[\"import\"](path.join(__dirname, file)); */\r\n    const model = sequelize['import'](path.join(models, file));\r\n    db[model.name] = model;\r\n  });\r\n\r\nObject.keys(db).forEach(modelName => {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\ndb.sequelize = sequelize;\r\ndb.Sequelize = Sequelize;\r\n\r\nmodule.exports = db;\r\n"]},"metadata":{},"sourceType":"script"}