{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../../middleware/auth';\n\nconst models = require('../../../db/models/index');\n\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    query: {\n      slug\n    },\n    method,\n    body\n  } = req;\n  const job = await models.jobs.findOne({\n    where: {\n      slug: slug\n    },\n    include: [{\n      model: models.users,\n      as: 'user'\n    }]\n  });\n  res.statusCode = 200;\n  return res.json({\n    status: 'success',\n    data: job\n  });\n}) // Post method\n.post(async (req, res) => {\n  const {\n    query: {\n      id,\n      name\n    },\n    method,\n    body\n  } = req;\n  const {\n    title,\n    content,\n    emailTo,\n    reportManager,\n    dateLimit\n  } = body;\n  const {\n    slug\n  } = req.query;\n  const {\n    user\n  } = req;\n  let status = 'success',\n      statusCode = 200,\n      error = '',\n      newJob = {};\n\n  try {\n    newJob = await models.jobs.create({\n      title,\n      content,\n      emailTo,\n      reportManager,\n      dateLimit,\n      status: 1,\n      userId: user.id\n    });\n  } catch (err) {\n    /* Sql error number */\n    statusCode = 500;\n    error = err.original.errno && 'Not available right now';\n    status = 'error';\n  }\n\n  return res.status(statusCode).json({\n    status,\n    error,\n    message: 'done',\n    data: newJob\n  });\n}) // Put method\n.put(async (req, res) => {\n  res.end('method - put');\n}) // Patch method\n.patch(async (req, res) => {\n  throw new Error('Throws me around! Error can be caught and handled.');\n});\nexport default handler;","map":null,"metadata":{},"sourceType":"module"}