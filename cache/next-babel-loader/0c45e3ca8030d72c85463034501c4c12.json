{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../../middleware/auth';\n\nconst models = require('../../../db/models/index');\n\nconst handler = nextConnect() // Get method\n.get(async (req, res) => {\n  const {\n    query: {\n      nextPage\n    },\n    method,\n    body\n  } = req;\n  const posts = await models.posts.findAndCountAll({\n    include: [{\n      model: models.users,\n      as: 'user'\n    }],\n    attributes: {\n      exclude: ['userId']\n    },\n    order: [// Will escape title and validate DESC against a list of valid direction parameters\n    ['id', 'DESC']],\n    offset: nextPage ? +nextPage : 0,\n    limit: 5\n  });\n  res.statusCode = 200;\n  res.json({\n    status: 'success',\n    data: posts.rows,\n    total: posts.count,\n    nextPage: +nextPage + 5\n  });\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/bobwp/Desktop/Coding-Bootcamp/Test-Projects/nextjs-sequelize/pages/api/post/index.js"],"names":["nextConnect","middleware","models","require","handler","get","req","res","query","nextPage","method","body","posts","findAndCountAll","include","model","users","as","attributes","exclude","order","offset","limit","statusCode","json","status","data","rows","total","count"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AAEA,MAAMC,OAAO,GAAGJ,WAAW,GACzB;AADyB,CAExBK,GAFa,CAET,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADH;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIFL,GAJJ;AAMA,QAAMM,KAAK,GAAG,MAAMV,MAAM,CAACU,KAAP,CAAaC,eAAb,CAA6B;AAC/CC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,KAAK,EAAEb,MAAM,CAACc,KADhB;AAEEC,MAAAA,EAAE,EAAE;AAFN,KADO,CADsC;AAO/CC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,CAAC,QAAD;AADC,KAPmC;AAU/CC,IAAAA,KAAK,EAAE,CACL;AACA,KAAC,IAAD,EAAO,MAAP,CAFK,CAVwC;AAc/CC,IAAAA,MAAM,EAAEZ,QAAQ,GAAG,CAACA,QAAJ,GAAe,CAdgB;AAe/Ca,IAAAA,KAAK,EAAE;AAfwC,GAA7B,CAApB;AAkBAf,EAAAA,GAAG,CAACgB,UAAJ,GAAiB,GAAjB;AACAhB,EAAAA,GAAG,CAACiB,IAAJ,CAAS;AACPC,IAAAA,MAAM,EAAE,SADD;AAEPC,IAAAA,IAAI,EAAEd,KAAK,CAACe,IAFL;AAGPC,IAAAA,KAAK,EAAEhB,KAAK,CAACiB,KAHN;AAIPpB,IAAAA,QAAQ,EAAE,CAACA,QAAD,GAAY;AAJf,GAAT;AAMD,CAlCa,CAAhB;AAoCA,eAAeL,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport middleware from '../../../middleware/auth';\r\nconst models = require('../../../db/models/index');\r\n\r\nconst handler = nextConnect()\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      query: { nextPage },\r\n      method,\r\n      body,\r\n    } = req;\r\n\r\n    const posts = await models.posts.findAndCountAll({\r\n      include: [\r\n        {\r\n          model: models.users,\r\n          as: 'user',\r\n        },\r\n      ],\r\n      attributes: {\r\n        exclude: ['userId'],\r\n      },\r\n      order: [\r\n        // Will escape title and validate DESC against a list of valid direction parameters\r\n        ['id', 'DESC'],\r\n      ],\r\n      offset: nextPage ? +nextPage : 0,\r\n      limit: 5,\r\n    });\r\n\r\n    res.statusCode = 200;\r\n    res.json({\r\n      status: 'success',\r\n      data: posts.rows,\r\n      total: posts.count,\r\n      nextPage: +nextPage + 5,\r\n    });\r\n  });\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}